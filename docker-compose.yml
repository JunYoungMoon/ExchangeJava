version: '3'

services:
  # 샤드 1: KRW 마켓 메이저 코인 체결 정보 (마스터)
  shard1-krw-major-master:
    image: mysql:8.0.30
    command: --server-id=3 --log-bin=mysql-bin --gtid-mode=ON --enforce-gtid-consistency=true
    environment:
      MYSQL_ROOT_PASSWORD: 1234
    volumes:
      - ./db/shard1-krw-major-master-data:/var/lib/mysql
      - ./config/mysql/shard1-krw-major-master-my.cnf:/etc/mysql/conf.d/shard1-krw-major-master-my.cnf
      - ./scripts/mysql/shard1-krw-major-master-init.sql:/docker-entrypoint-initdb.d/shard1-krw-major-master-init.sql
    ports:
      - "15306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  shard1-krw-major-slave:
    image: mysql:8.0.30
    command: --server-id=4 --log-bin=mysql-bin --gtid-mode=ON --enforce-gtid-consistency=true
    environment:
      MYSQL_ROOT_PASSWORD: 1234
    depends_on:
      shard1-krw-major-master:
        condition: service_healthy
    volumes:
      - ./db/shard1-krw-major-slave-data:/var/lib/mysql
      - ./config/mysql/shard1-krw-major-slave-my.cnf:/etc/mysql/conf.d/shard1-krw-major-slave-my.cnf
      - ./scripts/mysql/shard1-krw-major-slave-init.sql:/docker-entrypoint-initdb.d/shard1-krw-major-slave-init.sql
    ports:
      - "16306:3306"

  # 샤드 2: KRW 마켓 기타 코인 체결 정보 (마스터)
  shard2-krw-minor-master:
    image: mysql:8.0.30
    command: --server-id=5 --log-bin=mysql-bin --gtid-mode=ON --enforce-gtid-consistency=true
    environment:
      MYSQL_ROOT_PASSWORD: 1234
    volumes:
      - ./db/shard2-krw-minor-master-data:/var/lib/mysql
      - ./config/mysql/shard2-krw-minor-master-my.cnf:/etc/mysql/conf.d/shard2-krw-minor-master-my.cnf
      - ./scripts/mysql/shard2-krw-minor-master-init.sql:/docker-entrypoint-initdb.d/shard2-krw-minor-master-init.sql
    ports:
      - "17306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  shard2-krw-minor-slave:
    image: mysql:8.0.30
    command: --server-id=6 --log-bin=mysql-bin --gtid-mode=ON --enforce-gtid-consistency=true
    environment:
      MYSQL_ROOT_PASSWORD: 1234
    depends_on:
      shard2-krw-minor-master:
        condition: service_healthy
    volumes:
      - ./db/shard2-krw-minor-slave-data:/var/lib/mysql
      - ./config/mysql/shard2-krw-minor-slave-my.cnf:/etc/mysql/conf.d/shard2-krw-minor-slave-my.cnf
      - ./scripts/mysql/shard2-krw-minor-slave-init.sql:/docker-entrypoint-initdb.d/shard2-krw-minor-slave-init.sql
    ports:
      - "18306:3306"

  # 회원 및 기타 정보 저장 DB
  exchange-master:
    image: mysql:8.0.30
    command: --server-id=1 --log-bin=mysql-bin --gtid-mode=ON --enforce-gtid-consistency=true
    environment:
      MYSQL_ROOT_PASSWORD: 1234
    volumes:
      - ./db/mysql-master-data:/var/lib/mysql
      - ./config/mysql/exchange-master-my.cnf:/etc/mysql/conf.d/exchange-master-my.cnf
      - ./scripts/mysql/exchange-master-init.sql:/docker-entrypoint-initdb.d/exchange-master-init.sql
    ports:
      - "13306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  exchange-slave:
    image: mysql:8.0.30
    command: --server-id=2 --log-bin=mysql-bin --gtid-mode=ON --enforce-gtid-consistency=true
    environment:
      MYSQL_ROOT_PASSWORD: 1234
    depends_on:
      exchange-master:
        condition: service_healthy
    volumes:
      - ./db/mysql-slave-data:/var/lib/mysql
      - ./config/mysql/exchange-slave-my.cnf:/etc/mysql/conf.d/exchange-slave-my.cnf
      - ./scripts/mysql/exchange-slave-init.sql:/docker-entrypoint-initdb.d/exchange-slave-init.sql
    ports:
      - "14306:3306"

  redis:
    image: redis:latest
    volumes:
      - ./db/redis-data:/data
      - ./config/redis/redis.conf:/etc/redis/redis.conf
    ports:
      - "6379:6379"
    command: [ "redis-server", "/etc/redis/redis.conf" ]

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://localhost:9092,OUTSIDE://localhost:9093 #도커로 앱을 올릴때 INSIDE://kafka:9092로 내부망 변경하고 앱의 depends_on: - kafka 로설정
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"